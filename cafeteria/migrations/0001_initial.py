# Generated by Django 5.1.6 on 2025-03-03 20:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cafeteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text="User who can manage this cafeteria's menus and orders", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_cafeterias', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Cafeterias',
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('category', models.CharField(max_length=50)),
                ('availability', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='menu_items/')),
                ('nutritional_info', models.JSONField(blank=True, default=dict)),
                ('cafeteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='cafeteria.cafeteria')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pickup_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('preparing', 'Preparing'), ('ready', 'Ready for Pickup'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('delivery_option', models.CharField(choices=[('pickup', 'Pickup'), ('dine_in', 'Dine In')], default='pickup', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cafeteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='cafeteria.cafeteria')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_orders', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('special_instructions', models.TextField(blank=True)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cafeteria.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cafeteria.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatusUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('preparing', 'Preparing'), ('ready', 'Ready for Pickup'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='cafeteria.order')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DailyMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cafeteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_menus', to='cafeteria.cafeteria')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_menus', to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(related_name='daily_menus', to='cafeteria.menuitem')),
            ],
            options={
                'verbose_name_plural': 'Daily Menus',
                'unique_together': {('cafeteria', 'date')},
            },
        ),
    ]
